node_route_serv.erl
-------------------
* Switch over from ip() to na() types.
* Integrate with Patrik's loop detection and path cost library.

node_route_jsonrpc_serv.erl
---------------------------
* Continously choose new neighbours, discard old.
* Continously choose new overlay addresses, discard old.

node_tun_serv.erl
-----------------
* Implement it.
* Intercept DNS traffic. Forward DNS lookups to other overlay
  nodes. Forward lookups for the "anond" domain to the anond directory
  server.

node_path_cost_serv.erl
-----------------------
* Implement it.

node_tunnel_{recv,send}_serv.erl
--------------------------------
* Make all UDP traffic encrypted. How do we generate key pairs? OpenSSL?
* Send everything in 512 byte cells.
* Add support for optional steady-state-byte-streams.

ds_serv.erl
-----------
* Switch over from ip() to na() types.
* Add experimneltal flag for ds in anond.conf. cloak experimental functions.
* http://www.h-online.com/security/features/How-Skype-Co-get-round-firewalls-747197.html
* Use OA as public key?
* Add ip-address and port to anond.conf.
* Use dets instead of ets.
* Add anond.conf parameter to set directory for dets file.
* Add anond.conf parameter to clear the dets file on each restart.
* Make publish_peer/1, unpublish_peer/1 and published_peers/1 spoof
  proof. Signatures?
* Make sure that it works with many overlay addresses per node address.
* Add DNS functionality for overlay addresses. Make it spoof
  proof. Signatures? 
* Maybe use the streaming features of jsx.

jsonrpc_serv.erl
----------------
* Switch over to SSL ( How do we generate key pairs? OpenSSL?)

common_config_json_serv.erl
----------------------------

overseer_serv.erl
-----------------

generic stuff
-------------
* Write documentation (Use LyX)
  - Design document
  - End-user
* Ask Per to contribute the delayed start patch to the Erlang distro.
* Make it build and adhere to the package management system for:
  - Ubuntu
  - Mac
  - Windows
* Setup a nice anond site.
* Implement anond control panels for:
  - GTK
  - Mac
  - Windows
